version: '3'

services:
    #Contenedor A
    mongo:
        image: mongo
        container_name: db
        restart: on-failure:10
        env_file: .env
        environment:
          - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
          - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
          - MONGO_INITDB_DATABASE=$MONGO_DB
        volumes:
          - dbdata:/data/db
        networks:
          - app-network
    #Contenedor B
    mongo-express:
        image: mongo-express:latest
        ports:
          - 8081:8081
        environment:
          ME_CONFIG_BASICAUTH_USERNAME: renatogroffe
          ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
          ME_CONFIG_MONGODB_PORT: 27017
          ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USERNAME
          ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
        links:
          - mongo:mongo
        networks:
          - app-network
        depends_on:
          - mongo
    #Contenedor C
    generator:
        container_name: generator
        build:
            context: .
            dockerfile: dockerfile.generator
        container_name: generator
        restart: on-failure:10
        command: sh Puertos/Generator/wait-for.sh localhost:27017
        command: python3 Puertos/Generator/Executer.py
        networks: 
            - app-network
        depends_on: 
            - mongo
        links:
            - mongo:mongo



volumes:
    dbdata:
networks:
    app-network:
        driver: bridge